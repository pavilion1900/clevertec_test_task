plugins {
    id 'java'
    id 'maven-publish'
}

sourceSets {
    jmh {
        java.srcDirs = ['src/jmh/java']
        resources.srcDirs = ['src/jmh/resources']
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    jmhImplementation 'org.openjdk.jmh:jmh-core:1.33'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.33'
    implementation 'org.aspectj:aspectjweaver:1.9.6'
    implementation 'log4j:log4j:1.2.17'
    implementation 'org.slf4j:slf4j-log4j12:1.7.30'
    implementation 'com.google.code.gson:gson:2.9.0'
}

group = 'ru.clevertec'
version = '1.0-SNAPSHOT'
description = 'clevertec_test_task'
java.sourceCompatibility = JavaVersion.VERSION_14

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes "Main-Class": "ru.clevertec.CheckRunner"
    }
}

task jmh(type: JavaExec, dependsOn: jmhClasses) {
    main = 'org.openjdk.jmh.Main'
    classpath = sourceSets.jmh.compileClasspath + sourceSets.jmh.runtimeClasspath
}

// to make sure benchmarks always get compiled
classes.finalizedBy(jmhClasses)

test {
    useJUnitPlatform()
}